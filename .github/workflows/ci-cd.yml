name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install
        working-directory: ./frontend/Simple-Todos-In-React-JS

      - name: Lint frontend
        run: npm run lint
        working-directory: ./frontend/Simple-Todos-In-React-JS

      - name: Build frontend
        run: npm run build
        working-directory: ./frontend/Simple-Todos-In-React-JS

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install backend dependencies
        run: pip install -r backend/Flask-ToDo-List/requirements.txt

      - name: Lint backend
        run: flake8 backend/Flask-ToDo-List

      - name: Build and push Docker images
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest ./frontend/Simple-Todos-In-React-JS
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/backend:latest ./backend/Flask-ToDo-List
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/backend:latest

      - name: Deploy to AKS
        uses: Azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}

      - name: Deploy frontend
        run: kubectl apply -f helm/frontend/templates/deployment.yaml

      - name: Deploy backend
        run: kubectl apply -f helm/backend/templates/deployment.yaml
